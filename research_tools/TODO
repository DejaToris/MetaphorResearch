main algorithm:
done and mostly working.

NGrams DB access

    CONCLUSIONS:
    - the DB itself is the same as abstractionDB.
    - there is an existing routine that returns NGrams:
            "EXEC \"dbo\".\"GetNgrams\" \'VERB\', \'2\', \'1\', \'0\', \'1\', \'0\'"
            note that one window to the left eliminates objects preceded by an adjective or a determiner.
            find a way to combine the results of a 1 and 2 window?
    - the output comes as a list of strings sorted by freq:
            (1483785, 287, 7.051132629428506, 1251, 2, 1585, 1, u'lunch', 0, 1, u'lunch')
    - what is mutual information (MI) and why is it important?
     in this case MI is the last parameter in the input, might want to play with it.



    TODO bullets:
    - write method that utilizes the routine and combines 1-right and 2-right results
    - write result parser that will serialize the output of the routine
    - tests for days!